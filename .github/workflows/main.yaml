name: Tyk Tests

on:
  pull_request

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout tyk-operator
        uses: actions/checkout@v2
      - name: install kubebuilder
        uses: RyanSiu1995/kubebuilder-action@v1
        with:
          version: 2.3.1
      - name: run tests
        run: |
          make test

  integration-tests:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout tyk-operator
        uses: actions/checkout@v2
      - name: create kind cluster
        uses: helm/kind-action@v1.0.0
      - name: deploy tyk && tyk-operator
        shell: bash
        run: |
          echo "checking CI license expiry"
          jq -Re 'split(".")[1] | @base64d | fromjson | .exp > now' <<< "${{ secrets.DASH_LICENSE }}"

          ## Deploy Tyk Pro
          echo "Deploying Tyk Pro"
          export TYK_DB_LICENSEKEY=${{ secrets.DASH_LICENSE }}
          sh ./ci/deploy_tyk_pro.sh
          echo "bootstrapping tyk dashboard (initial org + user)"
          sh ./ci/bootstrap_org.sh
          cat bootstrapped

          ## Deploying CRDs
          echo "installing custom resources"
          make install
          kubectl get crds

          ## Export Env variables for Tyk Pro
          export TYK_AUTH=$(awk '/USER AUTHENTICATION CODE: /{print $NF}' bootstrapped)
          export TYK_ORG=$(awk '/ORG ID: /{print $NF}' bootstrapped)
          export TYK_MODE=pro
          export ENABLE_WEBHOOKS=false
          export TYK_URL=dashboard.tykpro-control-plane.svc

          echo "ORG: ${TYK_ORG}"
          echo "AUTH: ${TYK_AUTH}"
          echo "DASH URL: ${TYK_URL}"
          echo "TYK MODE: ${TYK_MODE}"

          # build docker image
          echo "Creating the Operator Docker image"
          make docker-build

          echo "Installing cert-manage prerequisites"
          export NAMESPACE=cert-manager
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.3/cert-manager.yaml
          kubectl wait deployment/cert-manager -n ${NAMESPACE} --for condition=available --timeout=60s
          kubectl wait deployment/cert-manager-cainjector -n ${NAMESPACE} --for condition=available --timeout=60s
          kubectl wait deployment/cert-manager-webhook  -n ${NAMESPACE} --for condition=available --timeout=60s
          kubectl get deployments -n ${NAMESPACE}
          echo "loading image into kind"
          kind load docker-image tyk-operator:latest --name chart-testing

          # deploy docker image into Kind cluster
          make deploy IMG=tyk-operator:latest
          export NAMESPACE=tyk-operator-system
          kubectl wait deployment/tyk-operator-controller-manager  -n ${NAMESPACE} --for condition=available --timeout=60s
          kubectl logs deployment.apps/tyk-operator-controller-manager manager -n ${NAMESPACE}

